{"version":3,"file":"937.js","mappings":";;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACO;AACP;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,mCAAmC;AACrD;AACA;AACA,kBAAkB,mCAAmC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,SAAS,GAAG,OAAO;AAC/D;AACA,iBAAiB;AACjB;AACA;AACA;AACA,gBAAgB,qBAAqB;AACrC,kCAAkC,wBAAwB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qBAAqB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,YAAY;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC5G6B;AAGA;AAGA;;AAE7B;AAC6C;AAC7C,kCAAkC,wEAAe;AACjD;AACA;AACA,wBAAwB,2EAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,6EAAe;AACf,EAAE,qEAAQ,GAAG,cAAc;AAC3B;AACA,6EAAe;AACf,EAAE,qEAAQ;AACV;AACA,6EAAe;AACf,EAAE,qEAAQ;AACV;;AAIE;;;;;;;;;;;;ACjDF;AAC+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO,KAAK,MAAM;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,KAAK;AACnB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,MAAM;AACtC;AACA;AACA,uFAAmB;AACnB;;AAIE;;;;;;;;;;;;;ACtC2B;;AAE7B;AACoH;AAC7B;AACvF,uCAAuC,kFAA6B;AACpE;AACA,uFAAmB,CAAC,mEAAU;;AAK5B;;;;;;;;;;;;;;;;;ACZsC;AACA;AACA;AACA;AACA;AAGtC","sources":["webpack://hackathon/./node_modules/@shoelace-style/localize/dist/index.js","webpack://hackathon/./node_modules/@shoelace-style/shoelace/dist/chunks/chunk.KLNI4JAW.js","webpack://hackathon/./node_modules/@shoelace-style/shoelace/dist/chunks/chunk.MAS2SHYD.js","webpack://hackathon/./node_modules/@shoelace-style/shoelace/dist/chunks/chunk.WLV3FVBR.js","webpack://hackathon/./node_modules/@shoelace-style/shoelace/dist/components/format-bytes/format-bytes.component.js"],"sourcesContent":["const connectedElements = new Set();\nconst translations = new Map();\nlet fallback;\nlet documentDirection = 'ltr';\nlet documentLanguage = 'en';\nconst isClient = (typeof MutationObserver !== \"undefined\" && typeof document !== \"undefined\" && typeof document.documentElement !== \"undefined\");\nif (isClient) {\n    const documentElementObserver = new MutationObserver(update);\n    documentDirection = document.documentElement.dir || 'ltr';\n    documentLanguage = document.documentElement.lang || navigator.language;\n    documentElementObserver.observe(document.documentElement, {\n        attributes: true,\n        attributeFilter: ['dir', 'lang']\n    });\n}\nexport function registerTranslation(...translation) {\n    translation.map(t => {\n        const code = t.$code.toLowerCase();\n        if (translations.has(code)) {\n            translations.set(code, Object.assign(Object.assign({}, translations.get(code)), t));\n        }\n        else {\n            translations.set(code, t);\n        }\n        if (!fallback) {\n            fallback = t;\n        }\n    });\n    update();\n}\nexport function update() {\n    if (isClient) {\n        documentDirection = document.documentElement.dir || 'ltr';\n        documentLanguage = document.documentElement.lang || navigator.language;\n    }\n    [...connectedElements.keys()].map((el) => {\n        if (typeof el.requestUpdate === 'function') {\n            el.requestUpdate();\n        }\n    });\n}\nexport class LocalizeController {\n    constructor(host) {\n        this.host = host;\n        this.host.addController(this);\n    }\n    hostConnected() {\n        connectedElements.add(this.host);\n    }\n    hostDisconnected() {\n        connectedElements.delete(this.host);\n    }\n    dir() {\n        return `${this.host.dir || documentDirection}`.toLowerCase();\n    }\n    lang() {\n        return `${this.host.lang || documentLanguage}`.toLowerCase();\n    }\n    getTranslationData(lang) {\n        var _a, _b;\n        const locale = new Intl.Locale(lang.replace(/_/g, '-'));\n        const language = locale === null || locale === void 0 ? void 0 : locale.language.toLowerCase();\n        const region = (_b = (_a = locale === null || locale === void 0 ? void 0 : locale.region) === null || _a === void 0 ? void 0 : _a.toLowerCase()) !== null && _b !== void 0 ? _b : '';\n        const primary = translations.get(`${language}-${region}`);\n        const secondary = translations.get(language);\n        return { locale, language, region, primary, secondary };\n    }\n    exists(key, options) {\n        var _a;\n        const { primary, secondary } = this.getTranslationData((_a = options.lang) !== null && _a !== void 0 ? _a : this.lang());\n        options = Object.assign({ includeFallback: false }, options);\n        if ((primary && primary[key]) ||\n            (secondary && secondary[key]) ||\n            (options.includeFallback && fallback && fallback[key])) {\n            return true;\n        }\n        return false;\n    }\n    term(key, ...args) {\n        const { primary, secondary } = this.getTranslationData(this.lang());\n        let term;\n        if (primary && primary[key]) {\n            term = primary[key];\n        }\n        else if (secondary && secondary[key]) {\n            term = secondary[key];\n        }\n        else if (fallback && fallback[key]) {\n            term = fallback[key];\n        }\n        else {\n            console.error(`No translation found for: ${String(key)}`);\n            return String(key);\n        }\n        if (typeof term === 'function') {\n            return term(...args);\n        }\n        return term;\n    }\n    date(dateToFormat, options) {\n        dateToFormat = new Date(dateToFormat);\n        return new Intl.DateTimeFormat(this.lang(), options).format(dateToFormat);\n    }\n    number(numberToFormat, options) {\n        numberToFormat = Number(numberToFormat);\n        return isNaN(numberToFormat) ? '' : new Intl.NumberFormat(this.lang(), options).format(numberToFormat);\n    }\n    relativeTime(value, unit, options) {\n        return new Intl.RelativeTimeFormat(this.lang(), options).format(value, unit);\n    }\n}\n","import {\n  LocalizeController\n} from \"./chunk.WLV3FVBR.js\";\nimport {\n  ShoelaceElement\n} from \"./chunk.UYAO2JRR.js\";\nimport {\n  __decorateClass\n} from \"./chunk.B3BW2AY6.js\";\n\n// src/components/format-bytes/format-bytes.component.ts\nimport { property } from \"lit/decorators.js\";\nvar SlFormatBytes = class extends ShoelaceElement {\n  constructor() {\n    super(...arguments);\n    this.localize = new LocalizeController(this);\n    this.value = 0;\n    this.unit = \"byte\";\n    this.display = \"short\";\n  }\n  render() {\n    if (isNaN(this.value)) {\n      return \"\";\n    }\n    const bitPrefixes = [\"\", \"kilo\", \"mega\", \"giga\", \"tera\"];\n    const bytePrefixes = [\"\", \"kilo\", \"mega\", \"giga\", \"tera\", \"peta\"];\n    const prefix = this.unit === \"bit\" ? bitPrefixes : bytePrefixes;\n    const index = Math.max(0, Math.min(Math.floor(Math.log10(this.value) / 3), prefix.length - 1));\n    const unit = prefix[index] + this.unit;\n    const valueToFormat = parseFloat((this.value / Math.pow(1e3, index)).toPrecision(3));\n    return this.localize.number(valueToFormat, {\n      style: \"unit\",\n      unit,\n      unitDisplay: this.display\n    });\n  }\n};\n__decorateClass([\n  property({ type: Number })\n], SlFormatBytes.prototype, \"value\", 2);\n__decorateClass([\n  property()\n], SlFormatBytes.prototype, \"unit\", 2);\n__decorateClass([\n  property()\n], SlFormatBytes.prototype, \"display\", 2);\n\nexport {\n  SlFormatBytes\n};\n","// src/translations/en.ts\nimport { registerTranslation } from \"@shoelace-style/localize\";\nvar translation = {\n  $code: \"en\",\n  $name: \"English\",\n  $dir: \"ltr\",\n  carousel: \"Carousel\",\n  clearEntry: \"Clear entry\",\n  close: \"Close\",\n  copied: \"Copied\",\n  copy: \"Copy\",\n  currentValue: \"Current value\",\n  error: \"Error\",\n  goToSlide: (slide, count) => `Go to slide ${slide} of ${count}`,\n  hidePassword: \"Hide password\",\n  loading: \"Loading\",\n  nextSlide: \"Next slide\",\n  numOptionsSelected: (num) => {\n    if (num === 0)\n      return \"No options selected\";\n    if (num === 1)\n      return \"1 option selected\";\n    return `${num} options selected`;\n  },\n  previousSlide: \"Previous slide\",\n  progress: \"Progress\",\n  remove: \"Remove\",\n  resize: \"Resize\",\n  scrollToEnd: \"Scroll to end\",\n  scrollToStart: \"Scroll to start\",\n  selectAColorFromTheScreen: \"Select a color from the screen\",\n  showPassword: \"Show password\",\n  slideNum: (slide) => `Slide ${slide}`,\n  toggleColorFormat: \"Toggle color format\"\n};\nregisterTranslation(translation);\nvar en_default = translation;\n\nexport {\n  en_default\n};\n","import {\n  en_default\n} from \"./chunk.MAS2SHYD.js\";\n\n// src/utilities/localize.ts\nimport { LocalizeController as DefaultLocalizationController, registerTranslation } from \"@shoelace-style/localize\";\nimport { registerTranslation as registerTranslation2 } from \"@shoelace-style/localize\";\nvar LocalizeController = class extends DefaultLocalizationController {\n};\nregisterTranslation(en_default);\n\nexport {\n  LocalizeController,\n  registerTranslation2 as registerTranslation\n};\n","import {\n  SlFormatBytes\n} from \"../../chunks/chunk.KLNI4JAW.js\";\nimport \"../../chunks/chunk.WLV3FVBR.js\";\nimport \"../../chunks/chunk.MAS2SHYD.js\";\nimport \"../../chunks/chunk.UYAO2JRR.js\";\nimport \"../../chunks/chunk.B3BW2AY6.js\";\nexport {\n  SlFormatBytes as default\n};\n"],"names":[],"sourceRoot":""}
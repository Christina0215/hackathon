{"version":3,"file":"content-script.js","mappings":";;;;AAAO;AACP;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACf4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA,oDAAoD,mBAAmB;AACvE;AACA;AACA;AACA,aAAa;AACb,uCAAuC,cAAc;AACrD,SAAS;AACT;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,gBAAgB,WAAW;AAC3B,kCAAkC,GAAG,gBAAgB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mHAAmH,OAAO;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","sources":["webpack://hackathon/./src/types/index.ts","webpack://hackathon/./src/scripts/content.ts"],"sourcesContent":["export const DEFAULT_SETTINGS = {\n    autoSummarize: false,\n    promptForSummarize: \"Please summarize the following content, extract the key points and main ideas. Present the summary in a clear and concise way.\",\n    typeForSummarize: 'tl;dr',\n    formatForSummarize: 'markdown',\n    lengthForSummarize: 'medium',\n    promptForMultiSummarize: \"Please summarize these pieces of content together, find common themes and key points. Present a comprehensive summary.\",\n    typeForMultiSummarize: 'key-points',\n    formatForMultiSummarize: 'markdown',\n    lengthForMultiSummarize: 'long',\n    promptForCompare: \"Please compare and analyze the following content, focusing on their similarities, differences, and relationships. Organize your analysis in a clear structure.\",\n    typeForCompare: 'key-points',\n    formatForCompare: 'markdown',\n    lengthForCompare: 'long',\n    excludedDomains: []\n};\n","import { DEFAULT_SETTINGS } from '../types';\ndocument.addEventListener('selectionchange', () => {\n    const selection = window.getSelection();\n    const hasSelection = selection && selection.toString().trim();\n    chrome.runtime.sendMessage({\n        type: 'updateContextMenu',\n        enabled: !!hasSelection\n    });\n});\nchrome.runtime.onMessage.addListener((message) => {\n    if (message.type === 'addToPendingQueue' && message.text) {\n        chrome.storage.local.get('pendingQueue', ({ pendingQueue = [] }) => {\n            pendingQueue.push({\n                text: message.text,\n                timestamp: Date.now()\n            });\n            chrome.storage.local.set({ pendingQueue });\n        });\n    }\n});\n// 添加页面加载完成后的处理\nwindow.onload = async () => {\n    console.log('Page loaded, preparing content for summarization');\n    try {\n        // 获取设置\n        const { settings } = await chrome.storage.sync.get('settings');\n        const currentSettings = { ...DEFAULT_SETTINGS, ...settings };\n        // 检查是否启用自动总结\n        if (!currentSettings.autoSummarize) {\n            console.log('Auto summarize is disabled');\n            return;\n        }\n        // 检查当前域名是否在排除列表中\n        const currentDomain = window.location.hostname;\n        if (currentSettings.excludedDomains?.some(domain => currentDomain === domain || currentDomain.endsWith(`.${domain}`))) {\n            console.log('Domain is excluded from auto-summarization');\n            return;\n        }\n        // 获取页面内容\n        const pageContent = {\n            text: document.body.innerText.replace(/\\n/g, ' '),\n            html: document.body.innerHTML,\n            main: document.querySelector('main')?.innerText,\n            title: document.title,\n            url: window.location.href\n        };\n        // 使用设置创建摘要器\n        const summarizer = await window.ai.summarizer.create({\n            sharedContext: currentSettings.promptForSummarize,\n            type: currentSettings.typeForSummarize,\n            format: currentSettings.formatForSummarize,\n            length: currentSettings.lengthForSummarize\n        });\n        const summary = await summarizer.summarize(pageContent.text);\n        // 发送页面内容和摘要到后台进程\n        chrome.runtime.sendMessage({\n            type: 'AUTO_SUMMARIZE_PAGE',\n            pageContent,\n            summary\n        });\n    }\n    catch (error) {\n        console.error('Error in content script:', error);\n    }\n};\n// 添加总结完成的消息监听器\nchrome.runtime.onMessage.addListener((message) => {\n    if (message.type === 'SUMMARY_COMPLETED') {\n        console.log('Summary completed:', message.summary);\n        // 可以在这里添加一些视觉反馈，比如显示一个通知\n    }\n});\n"],"names":[],"sourceRoot":""}